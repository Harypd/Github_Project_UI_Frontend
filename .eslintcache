[{"C:\\Users\\GQ639ZH\\Downloads\\GitHUbProj\\GitHUbProj\\src\\index.tsx":"1","C:\\Users\\GQ639ZH\\Downloads\\GitHUbProj\\GitHUbProj\\src\\App.tsx":"2","C:\\Users\\GQ639ZH\\Downloads\\GitHUbProj\\GitHUbProj\\src\\i18n.ts":"3","C:\\Users\\GQ639ZH\\Downloads\\GitHUbProj\\GitHUbProj\\src\\pages\\repository-search\\index.tsx":"4","C:\\Users\\GQ639ZH\\Downloads\\GitHUbProj\\GitHUbProj\\src\\pages\\repository-search\\query.ts":"5","C:\\Users\\GQ639ZH\\Downloads\\GitHUbProj\\GitHUbProj\\src\\common\\list\\index.tsx":"6","C:\\Users\\GQ639ZH\\Downloads\\GitHUbProj\\GitHUbProj\\src\\common\\loader\\index.tsx":"7","C:\\Users\\GQ639ZH\\Downloads\\GitHUbProj\\GitHUbProj\\src\\components\\header\\index.tsx":"8","C:\\Users\\GQ639ZH\\Downloads\\GitHUbProj\\GitHUbProj\\src\\components\\user-search\\index.tsx":"9","C:\\Users\\GQ639ZH\\Downloads\\GitHUbProj\\GitHUbProj\\src\\common\\repository-card\\index.tsx":"10","C:\\Users\\GQ639ZH\\Downloads\\GitHUbProj\\GitHUbProj\\src\\common\\input\\index.tsx":"11","C:\\Users\\GQ639ZH\\Downloads\\GitHUbProj\\GitHUbProj\\src\\common\\toggle\\index.tsx":"12","C:\\Users\\GQ639ZH\\Downloads\\GitHUbProj\\GitHUbProj\\src\\common\\button\\index.tsx":"13"},{"size":755,"mtime":1613153210911,"results":"14","hashOfConfig":"15"},{"size":2089,"mtime":1613149148329,"results":"16","hashOfConfig":"15"},{"size":607,"mtime":1613135263583,"results":"17","hashOfConfig":"15"},{"size":2202,"mtime":1613153240410,"results":"18","hashOfConfig":"15"},{"size":920,"mtime":1613135264991,"results":"19","hashOfConfig":"15"},{"size":1575,"mtime":1613135264192,"results":"20","hashOfConfig":"15"},{"size":361,"mtime":1613135264309,"results":"21","hashOfConfig":"15"},{"size":329,"mtime":1613135264733,"results":"22","hashOfConfig":"15"},{"size":1578,"mtime":1613149362578,"results":"23","hashOfConfig":"15"},{"size":830,"mtime":1613135264431,"results":"24","hashOfConfig":"15"},{"size":533,"mtime":1613135264075,"results":"25","hashOfConfig":"15"},{"size":1212,"mtime":1613135264572,"results":"26","hashOfConfig":"15"},{"size":548,"mtime":1613135264009,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"zxmijr",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\GQ639ZH\\Downloads\\GitHUbProj\\GitHUbProj\\src\\index.tsx",[],["59","60"],"C:\\Users\\GQ639ZH\\Downloads\\GitHUbProj\\GitHUbProj\\src\\App.tsx",[],"C:\\Users\\GQ639ZH\\Downloads\\GitHUbProj\\GitHUbProj\\src\\i18n.ts",[],"C:\\Users\\GQ639ZH\\Downloads\\GitHUbProj\\GitHUbProj\\src\\pages\\repository-search\\index.tsx",["61"],"import React, { useContext, useState } from 'react';\r\nimport List from '../../common/list';\r\nimport { useQuery } from '@apollo/client';\r\nimport { SEARCH_REPOSITORY } from './query';\r\nimport UserSearch from '../../components/user-search';\r\nimport Loader from '../../common/loader';\r\nimport styles from './repository-search.module.scss';\r\nimport { IRepositoryCard } from '../../common/repository-card';\r\nimport { toast } from 'react-toastify';\r\nimport { ThemeContext } from '../../App';\r\nimport Header from '../../components/header';\r\nimport Input from '../../common/input';\r\n\r\n/* \r\n  Component receives the list of users and with each user are the associated repositories\r\n  We need to iterate over the users and fetch the repositories.\r\n  While iterating, we also have to ignore the typename being 'Repository' which are returned in the response.\r\n*/\r\nconst getRepositoryList = (data: any): Array<IRepositoryCard> | null => {\r\n  const users = data?.search.edges;\r\n  if (!users) return null;\r\n  return users.reduce((acc: any, curr: any) => {\r\n    if (curr.node.__typename === 'User') {\r\n      return [...acc, ...curr.node.repositories?.edges];\r\n    } else {\r\n      return acc;\r\n    }\r\n  }, []);\r\n};\r\n\r\nfunction RepositorySearch() {\r\n  const { theme } = useContext(ThemeContext);\r\n  const [username, setUsername] = useState('');\r\n\r\n  // const [repositories, setRepositories] = useState('');\r\n  const { error, loading, data } = useQuery(SEARCH_REPOSITORY, {\r\n    fetchPolicy: 'cache-and-network',\r\n    variables: { queryString: username },\r\n    skip: !username,\r\n  });\r\n  // Showing error message using toast\r\n  if (error) {\r\n    toast('An error has occurred while processing your request! Please try again', {\r\n      type: 'error',\r\n    });\r\n    return null;\r\n  }\r\n  const repositories = getRepositoryList(data);\r\n\r\n  return (\r\n    \r\n    <section className={`${styles[\"main-container\"]} ${styles[theme]}`}>\r\n      <Header></Header>\r\n      <UserSearch onUserSubmit={setUsername} />\r\n      <main>\r\n        {loading ? <Loader className={styles['loader']} /> : <List data={repositories} className={styles['user-list']} />}\r\n      </main>\r\n      </section>\r\n    \r\n  );\r\n}\r\n\r\nexport default RepositorySearch;\r\n","C:\\Users\\GQ639ZH\\Downloads\\GitHUbProj\\GitHUbProj\\src\\pages\\repository-search\\query.ts",[],"C:\\Users\\GQ639ZH\\Downloads\\GitHUbProj\\GitHUbProj\\src\\common\\list\\index.tsx",[],"C:\\Users\\GQ639ZH\\Downloads\\GitHUbProj\\GitHUbProj\\src\\common\\loader\\index.tsx",[],"C:\\Users\\GQ639ZH\\Downloads\\GitHUbProj\\GitHUbProj\\src\\components\\header\\index.tsx",[],"C:\\Users\\GQ639ZH\\Downloads\\GitHUbProj\\GitHUbProj\\src\\components\\user-search\\index.tsx",["62"],"import React, { ChangeEvent, FormEvent, useContext, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ThemeContext, Theme } from '../../App';\r\nimport Button from '../../common/button';\r\nimport Input from '../../common/input';\r\nimport Toggle from '../../common/toggle';\r\nimport styles from './user-search.module.scss';\r\n\r\ninterface ISearchProps {\r\n  onUserSubmit: (username: string) => void;\r\n}\r\n\r\nconst UserSearch = ({ onUserSubmit }: ISearchProps) => {\r\n  // Taking in the translator from i18next package\r\n  const { t } = useTranslation();\r\n  const { theme, toggleTheme } = useContext(ThemeContext);\r\n  const [text, setText] = useState('');\r\n  const onTextChange = (e: ChangeEvent<HTMLInputElement>) => setText(e.target.value);\r\n  const onFormSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (text) {\r\n      onUserSubmit(text);\r\n    }\r\n  };\r\n  return (\r\n    <section className={`${styles['container']} ${styles[theme]}`}>\r\n      <form className={styles['form']} onSubmit={onFormSubmit} data-cy=\"user-form\">\r\n        <Input\r\n          className={styles['search']}\r\n          placeholder={t('searchInputPlaceholder')}\r\n          value={text}\r\n          onChange={onTextChange}\r\n          data-cy=\"user-search\"\r\n        />\r\n        <Button className={styles['search-button']} disabled={text.trim().length < 3} data-cy=\"user-submit\">\r\n          {t('searchText')}\r\n        </Button>\r\n      </form>\r\n      <Toggle onToggle={() => toggleTheme()} theme={theme} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default UserSearch;\r\n","C:\\Users\\GQ639ZH\\Downloads\\GitHUbProj\\GitHUbProj\\src\\common\\repository-card\\index.tsx",["63","64"],"import { useContext } from 'react';\r\nimport { ThemeContext } from '../../App';\r\nimport styles from './repository-card.module.scss';\r\n\r\nexport interface IRepositoryCard {\r\n  data: {\r\n    name: string;\r\n    url: string;\r\n  };\r\n  className?: string;\r\n}\r\n\r\n// Repository card functionality\r\n// On click on a particular repository card - a new tab with the GitHub url of the repo will open\r\nconst RepositoryCard = ({ data, className }: IRepositoryCard) => {\r\n  return (\r\n    <li className={styles['repository-list']}><a\r\n      target=\"_blank\"\r\n      rel=\"noreferrer\"\r\n      aria-label={data.name}\r\n      // className={`${styles['repository-card']} ${className ?? ''} ${styles[theme]}`}\r\n      href={data.url}>\r\n      <span className={styles['name']}>{data.name}</span>\r\n    </a>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default RepositoryCard;\r\n","C:\\Users\\GQ639ZH\\Downloads\\GitHUbProj\\GitHUbProj\\src\\common\\input\\index.tsx",[],"C:\\Users\\GQ639ZH\\Downloads\\GitHUbProj\\GitHUbProj\\src\\common\\toggle\\index.tsx",["65"],"import React, { useEffect, useState } from 'react';\r\nimport { Theme } from '../../App';\r\nimport styles from './toggle.module.scss';\r\n\r\ninterface IProps {\r\n  onToggle: (value: boolean) => void;\r\n  theme: string;\r\n}\r\n\r\nconst Toggle = (props: IProps) => {\r\n  const [checked, setChecked] = useState(true);\r\n  const onToggle = (e: any) => {\r\n    setChecked(!checked);\r\n    // Stopping the propagation of event\r\n    e.stopPropagation();\r\n    e.nativeEvent.stopImmediatePropagation();\r\n    props.onToggle(checked);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const checkedByDefault = props.theme === Theme.dark;\r\n    setChecked(checkedByDefault)\r\n  }, [])\r\n  const notifyChange = () => { }\r\n  return (\r\n    <span className={styles[\"switch\"]} onClick={onToggle}>\r\n      <input\r\n        aria-label={`change to ${props.theme === Theme.dark ? Theme.dark : Theme.light} mode`}\r\n        type=\"checkbox\"\r\n        checked={checked}\r\n        onChange={notifyChange} />\r\n      <span>\r\n        <span className={`${styles[\"slider\"]} ${styles[\"round\"]}`}></span>\r\n        <span className={styles['on-text']}>Light</span>\r\n        <span className={styles['off-text']}>Dark</span>\r\n      </span>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default Toggle;","C:\\Users\\GQ639ZH\\Downloads\\GitHUbProj\\GitHUbProj\\src\\common\\button\\index.tsx",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":12,"column":8,"nodeType":"72","messageId":"73","endLine":12,"endColumn":13},{"ruleId":"70","severity":1,"message":"74","line":3,"column":24,"nodeType":"72","messageId":"73","endLine":3,"endColumn":29},{"ruleId":"70","severity":1,"message":"75","line":1,"column":10,"nodeType":"72","messageId":"73","endLine":1,"endColumn":20},{"ruleId":"70","severity":1,"message":"76","line":2,"column":10,"nodeType":"72","messageId":"73","endLine":2,"endColumn":22},{"ruleId":"77","severity":1,"message":"78","line":23,"column":6,"nodeType":"79","endLine":23,"endColumn":8,"suggestions":"80"},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"@typescript-eslint/no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar","'Theme' is defined but never used.","'useContext' is defined but never used.","'ThemeContext' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.theme'. Either include it or remove the dependency array.","ArrayExpression",["83"],"no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},"Update the dependencies array to be: [props.theme]",{"range":"86","text":"87"},[635,637],"[props.theme]"]